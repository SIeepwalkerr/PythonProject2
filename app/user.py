from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from asyncio import CancelledError, create_task
from app.generators import generate
from app.keyboards import main_keyboard, cancel_keyboard
from app.states import Chat
from app.database.requests import set_user
user = Router()
active_tasks = {}
@user.message(CommandStart())
async def cmd_start(message: Message):
    await set_user(message.from_user.id)
    await message.answer(
        'üëæ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø Mr. Robot ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º. '
        '–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏: –æ—Ç –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π',
        reply_markup=main_keyboard
    )
@user.message(F.text == '–ß–∞—Ç')
async def chatting(message: Message, state: FSMContext):
    await state.set_state(Chat.text)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
        reply_markup=cancel_keyboard
    )
@user.message(Chat.text)
async def ai(message: Message, state: FSMContext):
    await state.set_state(Chat.wait)
    await message.answer("–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...", reply_markup=cancel_keyboard)
    task = create_task(handle_generation(message, state))
    active_tasks[message.from_user.id] = task
async def handle_generation(message: Message, state: FSMContext):
    try:
        res = await generate(message.text)
        await message.answer(res.choices[0].message.content, reply_markup=main_keyboard)
    except CancelledError:
        await message.answer("–ó–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.", reply_markup=main_keyboard)
    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}", reply_markup=main_keyboard)
    finally:
        active_tasks.pop(message.from_user.id, None)
        await state.clear()
@user.message(F.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å")
async def cancel_request(message: Message, state: FSMContext):
    user_id = message.from_user.id
    task = active_tasks.get(user_id)

    if task:
        task.cancel()
        active_tasks.pop(user_id, None)
    await state.clear()
    await message.answer(
        "–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=main_keyboard
    )
@user.message(Chat.wait)
async def ignore_while_processing(message: Message):
    await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ! –ó–∞–ø—Ä–æ—Å –µ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å'.")

